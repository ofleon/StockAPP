@model StockAPP.Web.Models.Sales_Order
@inject StockAPP.Web.Repository.IStockRepository _ItemRepo

@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}

<h1>Update</h1>

<h4>Sales_Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="SalesOrderForm" asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Sales_Order_ID" class="control-label"></label>
                <input asp-for="Sales_Order_ID" class="form-control" />
                <span asp-validation-for="Sales_Order_ID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order_Code" class="control-label"></label>
                <input asp-for="Order_Code" class="form-control" />
                <span asp-validation-for="Order_Code" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order_Status" class="control-label"></label>
                <input asp-for="Order_Status" class="form-control" />
                <span asp-validation-for="Order_Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order_Date" class="control-label"></label>
                <input asp-for="Order_Date" class="form-control" />
                <span asp-validation-for="Order_Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Modified_Date" class="control-label"></label>
                <input asp-for="Modified_Date" class="form-control" />
                <span asp-validation-for="Modified_Date" class="text-danger"></span>
            </div>
            <table id="ProductTable" class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Order Code</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Sales_Order_Detail.Count; i++)
                    {
                        <tr>
                            <td>
                                <select class="form-control" id="ddlselectitems" asp-for="@Model.Sales_Order_Detail[i].Item_ID" asp-items="(await _ItemRepo.GetAllActiveItems()).Select(x=> new SelectListItem() { Text = x.Name, Value = x.Item_ID.ToString()})">
                                    <option value="">Please choose your language</option>
                                </select>
                            </td>
                            <td>
                                <input asp-for="@Model.Sales_Order_Detail[i].Item_Qty" class="form-control" />
                            </td>
                            <td>
                                <button type="button" id="btndummy-@i" style="width:80px" class="btn btn-success invisible">Dummy</button>
                                <button type="button" id="btnadd-@i" style="width:80px" class="btn btn-success visible" onclick="AddItem(this)">Add</button>
                                <button type="button" id="btnremove-@i" style="width:80px" class="btn btn-success visible" onclick="DeleteItem(this)">Remove</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <input type="hidden" id="hdnLastIndex" value="0" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

<script type="text/javascript">

    function DeleteItem(btn) {
        $(btn).closest('tr').remove();
    }

    function AddItem(btn) {

        var table = document.getElementById('ProductTable');
        var rows = table.getElementsByTagName('tr');

        var rowOuterHtml = rows[rows.length - 1].outerHTML;

        var lastrowIdx = document.getElementById('hdnLastIndex').value;

        var nextrowIdx = eval(lastrowIdx) + 1;

        document.getElementById('hdnLastIndex').value = nextrowIdx;

        rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
        rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
        rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

        var newRow = table.insertRow();
        newRow.innerHTML = rowOuterHtml;

        var btnAddID = btn.id;
        var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

        var delbtn = document.getElementById(btnDeleteid);
        delbtn.classList.add("visible");
        delbtn.classList.remove("invisible");


        var addbtn = document.getElementById(btnAddID);
        addbtn.classList.remove("visible");
        addbtn.classList.add("invisible");

        rebindvalidators();

        //var newSelect = $("#ProductTable").find(".select2").last();
        //initializeSelect2(newSelect);
    }

    function rebindvalidators() {
        var $form = $("SalesOrderForm");

        $form.unbind();

        $form.data("validator", null);

        $.validator.unobtrusive.parse($form);

        $form.validate($form.data("unobtrusiveValidation").options);
    }
</script>

}
